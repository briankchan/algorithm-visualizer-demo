{
  "traceFile": "./trace.json",
  "frame": "subarraysum.Main:findSubarraySum",
  "steps": [
    {"label": "start", "pause": true},
    {"label": "loop", "pause": true},
    {"label": "loopBody", "pause": false},
    {"label": "found", "pause": true},
    {"label": "tooSmall", "pause": {"expr": "prevOp != 'tooSmall'"}},
    {"label": "tooSmall", "side": "end", "pause": true},
    {"label": "tooBig", "pause": true},
    {"label": "tooBig", "side": "end", "pause": true},
  ],
  "views": [
    {
      "name": "globals",
      "type": "html",
      "display": "none",

      "spacing": "1em",

      // labels
      "assign": {"expr": "iterationFirst !== first || iterationLast !== last"},

      "start": {"expr": "inside(label, 'start')"},
      "init": {"expr": "inside(label, 'loop') && !inside(label, 'loopBody')"},
      "loopBody": {"expr": "inside(label, 'loopBody') && !inside(label, 'checks')"},
      "tooBigAssign": {"expr": "inside(label, 'tooBig') && self.assign"},
      "tooSmallAssign": {"expr": "inside(label, 'tooSmall') && self.assign"},
      "tooBigCheck": {"expr": "inside(label, 'tooBig') && !self.assign"},
      "tooSmallCheck": {"expr": "inside(label, 'tooSmall') && !self.assign"},
    },
    {
      "name": "title",
      "type": "text",
      "content": {"expr": "'Searching for a subarray with sum ' + target"},
      "fontSize": 20,
      "marginBlock": {"expr": "globals.spacing"},
    },
    {
      "name": "numbers",
      "type": "array",
      "array": {"expr": "arr"},
      "margin": {"expr": "globals.spacing"},
      "gap": 0,
      "border": "1px solid",
      "elementConfig": {
        "fontSize": 20,
        "content": {"persist": true},
        "border": "1px solid",
        "conditions": [
          {
            "name": "current",
            "if": {"expr": "self.index >= first && self.index < last"},
            "then": {
              "background": "linear-gradient(to right, transparent 0, rgba(127,127,127,0.5) 0, rgba(127,127,127,0.5) 100%, transparent 100%)"
            }
          },
          {
            "name": "discarded",
            "if": {"expr": "self.index < first"},
            "then": {
              "background": "linear-gradient(to right, transparent 100%, rgba(127,127,127,0.5) 100%, transparent 100%)"
            }
          },
          {
            "name": "unprocessed",
            "if": {"expr": "self.index >= last"},
            "then": {
              "background": "linear-gradient(to right, transparent 0, rgba(127,127,127,0.5) 0, transparent 0)"
            }
          },
        ]
      }
    },
    {
      "name": "arrows",
      "type": "array",
      "array": {"expr": "arr"},
      "margin": {"expr": "globals.spacing"},
      "gap": 0,
      "x": "-1ch", // offset 1 character to make arrow line up
      "border": "1px solid transparent",
      "elementConfig": {
        "fontSize": 16,
        "content": {"expr": "''"},
        "height": "1em",
        "justifyContent": "start",
        "border": "1px solid transparent",
        "conditions": [
          {
            "name": "first",
            "if": {"expr": "self.index == first"},
            "then": {
              "content": "↑ start"
            }
          },
          {
            "name": "last",
            "if": {"expr": "self.index == last"},
            "then": {
              "content": "↑ end"
            }
          },
          {
            "if": {"expr": "inside(label, 'tooBig')"},
            "then": {
              "content": {
                "transition": {
                  "type": "swap",
                  "from": {"expr": "'arrows$' + first"},
                  "to": {"expr": "'arrows$' + (first-1)"},
                }
              }
            }
          },
          {
            "if": {"expr": "inside(label, 'tooSmall')"},
            "then": {
              "content": {
                "transition": {
                  "type": "swap",
                  "from": {"expr": "'arrows$' + last"},
                  "to": {"expr": "'arrows$' + (last-1)"},
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "currSumDisplay",
      "type": "text",
      "content": {
        "expr": "'Sum of highlighted subarray: ' + currSum",
        "transition": {
          "start": 0.3
        }
      },
      "fontSize": 16,
      "height": "1em",
      "margin": {"expr": "globals.spacing"},
      "conditions": [
        {
          "if": {"expr": "inside(label, 'start')"},
          "then": {"content": ""}
        }
      ]
    },
    {
      "name": "status",
      "type": "text",
      "content": "",
      "fontSize": 20,
      "margin": {"expr": "globals.spacing"},
      "height": "10em",
      "conditions": [
        {
          "name": "start",
          "if" : {"expr": "globals.init"},
          "then": {
            "content": "We'll start by trying the subarrays that start with the first element of the array."
          }
        },
        {
          "name": "tooSmall",
          "if": {"expr": "inside(label, 'tooSmall')"},
          "then": {
            "content": "This is too small, so we'll expand the subarray to the right."
          }
        },
        {
          "name": "tooBig",
          "if": {"expr": "inside(label, 'tooBig')"},
          "then": {
            "content": {"expr": "'Now this is too big. Expanding the array on the right will only make this worse, but shrinking it from the right will make the sum too small... Thus, we can conclude that the item at index ' + iterationFirst + ' can never be included in the sum, and we must shrink the subarray from the left.'"}
          }
        },
        {
          "name": "found",
          "if": {"expr": "inside(label, 'found')"},
          "then": {
            "content": "The sum matches, so we've found the array we're looking for!"
          }
        },
      ]
    },
    {
      "name": "extra",
      "type": "text",
      "content": "",
      "fontSize": 20,
      "margin": {"expr": "globals.spacing"},
      "height": "2em",
      "conditions": [
        {
          "name": "tooBig",
          "if": {"expr": "inside(label, 'tooBig') && first !== iterationFirst"},
          "then": {
            "content": {"expr": "'Next, we\\'ll consider subarrays that start at index ' + first + '.'"}
          }
        },
      ]
    },
    {
      "name": "pseudocode",
      "type": "array",
      "array": [
        ["init", "start = 0; end = 1"],
        ["loopBody", "while current sum is wrong:"],
        ["tooSmallCheck", "\tif current sum is too small:"],
        ["tooSmallAssign", "\t\tincrement end"],
        ["tooBigCheck", "\tif current sum is too large:"],
        ["tooBigAssign", "\t\tincrement start"],
      ],
      "fontFamily": "var(--vscode-editor-font-family)",
      "flexFlow": "column wrap", // must wrap for alignContent to work
      "alignItems": "start",
      "alignContent": "center",
      "tabSize": 4,
      "elementConfig": {
        "item": {"expr": "self.parent.array[self.index]"},
        "content": {"expr": "self.item[1]"},
        "background": "transparent",
        "whiteSpace": "pre",
        "conditions": [
          {
            "if": {"expr": "globals[self.item[0]]"},
            "then": {
              "background": "gray"
            }
          }
        ]
      }
    }
  ]
}
